. /lib/mroute/mroute-functions

RUN_D=/var/run
PID_F=$RUN_D/mroute.pid
PID=`cat $PID_F 2> /dev/null`

start() {
	if [ ! -f $PID_F ]; then
		[ -f /usr/share/udhcpc/default.mroute ] && {
			mv /usr/share/udhcpc/default.script /usr/share/udhcpc/default.script.orig
			mv /usr/share/udhcpc/default.mroute /usr/share/udhcpc/default.script
		}
		mkdir -p $RUN_D
#		name="$(basename "${initscript}")"
#		PID=`pidof $name`
		PID=`ps | grep "/bin/sh /lib/mroute/mroute start" | sed '/grep/d' | awk '{ print $1 }'`
#		echo "$PID > $PID_F $name"
		echo $PID > $PID_F
#		logger -t mroute -p 5 -s "Starting.... PID $PID"
		logger -t mroute -p 5 -s "Starting.... "
		gwping
	else
		echo "mroute is running ... "
		exit 1
	fi
}

stop() {
	if [ -f $PID_F ]; then
		[ -f /usr/share/udhcpc/default.script.orig ] && {
			mv /usr/share/udhcpc/default.script /usr/share/udhcpc/default.mroute
			mv /usr/share/udhcpc/default.script.orig /usr/share/udhcpc/default.script
		}
		PID=`ps | grep "/bin/sh /lib/mroute/mroute start" | sed '/grep/d' | awk '{ print $1 }'`
		logger -t mroute -p 5 -s "stoping mroute... PID $PID"
		for i in $(seq 1 $WAN_DEVCOUNT)
		do
			get_wan_values $i
			del_rt_rule $RT_TABLE
			delete_wan_rt
		done
		eval "`ip route | grep "default" | awk '{ print "ip route del default"}'`"
		kill $PID 2 > /dev/null
		rm $PID_F 2> /dev/null
		rm /var/run/mroute.active 2> /dev/null
		logger -t mroute -p 5 -s "Stoped"
		echo ""
#		echo "Restarting Network .... Please wait..."
#		ifup -a
#		wifi
#		sleep 5
#		echo ""
		ip route 
	else
		echo "mroute is not running"
		exit 1
	fi
	exit 0
}

restart(){
	stop
	sleep 2
	start
}

status() {
	if [ ! -f $PID_F ]; then
		echo "stoped"
	else
		echo "running"
	fi
	exit 0
}

active() {
		STATUS=`cat /var/run/mroute.active 2> /dev/null`
		echo $STATUS
		exit 0
}

case $1 in
	stop) stop ;;
	status) status ;;
	restart) restart ;;
	active) active ;;
	*) start ;;
esac	
