#!/bin/sh
#
# Webif post-install script.
#


#########################################################################################
# functions

TestInstall()
{
	this_version="__SVN_REVISION__"
	installed_version=$(cat "${IPKG_INSTROOT}/www/.version")
	if [ -f "/www/.version" ] && [ "$this_version" = "$installed_version" ]; then
		echo "SUCCESS! Webif^2 installation appears OK. Welcome to X-Wrt!"
		echo "You may need to do a hard REFRESH to clear old CSS style from your browser."
	else
		echo "WARNING: Installation may have failed."
		echo " Detected r$installed_version is installed, but this is r$this_version."
	fi
}

ExecuteIfExists()
{
	# $1 = exec name
	# $2-$9 = params
	[ -f "$1" ] && {
		"$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9"
	}
}

# for squashfs symlink hacks like in WR RC5 (requires rm before change)
FixReadOnlyLink()
{
	touch "$1" >&- 2>&-	# test if read-only
	[ "$?" != 0 ] && {
		local tmpfile=$(mktemp "${IPKG_INSTROOT}/tmp/.webif-inst-XXXXXX")
		cp -p "$1" "$tmpfile" >&- 2>&-
		rm "$1"  >&- 2>&-
		mv "$tmpfile" "$1"  >&- 2>&-
	}
}

IPKG_UPDATE_NEEDED="0"
AddRepository()
{
	# $1=reponame
	# $2=repourl
	cat "${IPKG_INSTROOT}/etc/ipkg.conf" | grep -q "$2"
	[ "$?" != "0" ] && {
		echo "src $1 $2" >> "${IPKG_INSTROOT}/etc/ipkg.conf"
		IPKG_UPDATE_NEEDED="1"
	}
}

IPKG_UPDATE_NEEDED="0"
DeleteRepository()
{
	# $1=repourl
	cat "${IPKG_INSTROOT}/etc/ipkg.conf" | grep -q "$1"
	[ "$?" = "0" ] && {
		repo_url_sed=$(echo "$1" | sed s/'\/'/'\\\/'/g)
		cat "${IPKG_INSTROOT}/etc/ipkg.conf" |  sed /$repo_url_sed/d > "${IPKG_INSTROOT}/etc/ipkg.conf"
		IPKG_UPDATE_NEEDED="1"
	}
}
require_reboot() {
	# Note: Even if the httpd.conf is *NOT* changed the httpd still needs 
	#  restarting when upgraded from original webif. Newly created pages 
	#  can't be found by the httpd, not sure why. Yes, its true.
	# 		
	# Only sending SIGHUP to httpd does not work. Restarting httpd when
	# upgrade is done through webif has not been successful, despite a 
	# a number of techniques one would think would work. 
	#
	# Do *NOT* change this just because you think something or the other
	# should work. We've tried about everything. Only change after you've
	# thoroughly tested on clean, fresh installs of WR RC5 and RC6, and 
	# when upgrading the webif through the webif (i.e. use automated install
	# on X-Wrt home page). If you break this just because you think something
	# should definitely work, you will die.
	echo "I'm sorry, but I must reboot your router. This is a ONE time thing and"
	echo " future upgrades of the webif will NOT require a reboot."
	echo "Please wait about one minute for your router to reboot ..."
	reboot_file=$(mktemp /tmp/rebootme.XXXXXX)
	echo "#!/bin/sh" > $reboot_file
	echo "sleep 5 && reboot" >> "$reboot_file"
	chmod +x "$reboot_file"
	sh "$reboot_file" &	
}


#########################################################################################
# entry point

# fix some links on squashfs partition that aren't properly copied instead by firstboot
# has no effect when done in image builder.
FixReadOnlyLink "${IPKG_INSTROOT}/usr/lib/ipkg/info/webif.list"
FixReadOnlyLink "${IPKG_INSTROOT}/etc/ipkg.conf"
FixReadOnlyLink "${IPKG_INSTROOT}/usr/lib/ipkg/status"

# copy our new httpd.conf and S50dnsmasq files - we renamed them so that the webif can
# be uninstalled without ipkg removing these pre-existing files as well.
#dnsmasq_filename="S50dnsmasq"
#[ -f "${IPKG_INSTROOT}/etc/rc.d/S60dnsmasq" ] && {
	# S50dnsmasq renamed to S60dnsmasq in post-RC6
#	dnsmasq_filename="S60dnsmasq"
#}

# initialize default webif theme
# create symlink to /www/themes/xwrt (do NOT use INSTROOT in first arg).
rm -rf "${IPKG_INSTROOT}/www/themes/active" >&- 2>&-
ln -sf "/www/themes/xwrt" "${IPKG_INSTROOT}/www/themes/active" >&- 2>&-
[ $? != 0 ] && {
	# if fs doesn't support symlinks, do a copy
	mkdir -p "${IPKG_INSTROOT}/www/themes/active"
	cp -r "${IPKG_INSTROOT}/www/themes/xwrt/" "${IPKG_INSTROOT}/www/themes/active/"
}

# initialize webifmetabin binaries
# todo: move back to makefile because this won't be cleaned up good
ln -sf /usr/bin/webifmetabin "${IPKG_INSTROOT}/usr/bin/bstrip"
ln -sf /usr/bin/webifmetabin "${IPKG_INSTROOT}/usr/bin/webif-page"
ln -sf /usr/bin/webifmetabin "${IPKG_INSTROOT}/usr/bin/wepkeygen"
ln -sf /usr/bin/webifmetabin "${IPKG_INSTROOT}/usr/bin/int2human"

if [ -e ${IPKG_INSTROOT}/etc/openwrt_version ]; then
	revision="`cat ${IPKG_INSTROOT}/etc/openwrt_version`"
fi

# don't run below on 'real' system
if [ -n "${IPKG_INSTROOT}" ]; then
	if [ "$revision" = "7.06" ]; then
		AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/$S/packages"
	else
		AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/$S/packages"
	fi
fi

# only run below on 'real' system (not image builder)
if [ -z "${IPKG_INSTROOT}" ]; then
	
	# initialize ipkg.conf
	uname -a |grep mips |grep 2.4 && cat /proc/cpuinfo |grep Broadcom
	[ $? = 0 ] && {
		#Delete incorrect kamikaze repo
		DeleteRepository "http://downloads.x-wrt.org/xwrt/kamikaze/brcm-2.4/packages"
		if [ "$revision" = "7.06" ]; then
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/brcm-2.4/packages"
		else
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/brcm-2.4/packages"
		fi
	}
	uname -a |grep mips |grep "2.6.*" && cat /proc/cpuinfo |grep Broadcom
	[ $? = 0 ] && {
		cat /proc/cpuinfo | grep BCM47xx && SYSTYPE="47xx"
		cat /proc/cpuinfo | grep BCM63xx && SYSTYPE="63xx"
		#Delete incorrect repo
		DeleteRepository "http://downloads.x-wrt.org/xwrt/kamikaze/brcm${SYSTYPE}-2.6/packages"
		if [ -n $SYSTYPE ]; then
			if [ "$revision" = "7.06" ]; then
				AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/brcm${SYSTYPE}-2.6/packages"
			else
				AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/brcm${SYSTYPE}-2.6/packages"
			fi
		fi
		unset SYSTYPE
	}
	uname -a |grep "2.6" |grep "i\?86"
	[ $? = 0 ] && {
		#Delete incorrect repo
		DeleteRepository "http://downloads.x-wrt.org/xwrt/kamikaze/x86-2.6/packages"
		if [ "$revision" = "7.06" ]; then
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/x86-2.6/packages"
		else
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/x86-2.6/packages"
		fi
	}
	uname -a |grep mips |grep 2.6 && cat /proc/cpuinfo |grep Atheros
	[ $? = 0 ] && {
		#Delete incorrect repo
		DeleteRepository "http://downloads.x-wrt.org/xwrt/kamikaze/atheros-2.6/packages"
		if [ "$revision" = "7.06" ]; then
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/atheros-2.6/packages"
		else
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/atheros-2.6/packages"
		fi
	}
	cat /proc/cpuinfo |grep "IXP4\?\?"
	[ $? = "0" ] && {
		if [ "$revision" = "7.06" ]; then
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/7.06/ixp4xx-2.6/packages"
		else
			AddRepository "X-Wrt" "http://downloads.x-wrt.org/xwrt/kamikaze/snapshots/ixp4xx-2.6/packages"
		fi
	}

#commit our old webif settings if they exist
if [ -e "/tmp/.uci/webif" ]; then
. /etc/functions.sh
. /lib/config/uci.sh
	uci_commit "webif"
fi

	[ "$IPKG_UPDATE_NEEDED" = "1" ] && ipkg update
	
	# force re-initialization of extension package lists
	/usr/lib/webif/webif-mklanglist.sh
	/usr/lib/webif/webif-mkthemelist.sh

	/etc/init.d/webif enable
	/etc/init.d/custom-user-startup enable
	
	#FIXME: Syslog needs to be double checked
	#/etc/init.d/syslog enable
	
	ExecuteIfExists "/etc/init.d/webif" start
#	ExecuteIfExists "/etc/init.d/firmwareinfo"	# x-wrt images use to pre-empt firmware_* set

	# test installation successfulness
	TestInstall
	if [ -e /etc/httpd.conf ]; then
		httpd_1=$(cat /tmp/httpd.conf.old)
		httpd_2=$(cat /etc/httpd.conf)
		[ "$httpd_1" != "$httpd_2" ] && {
			echo "Reinitializing httpd ..."		
			killall -HUP httpd
		}
	#comment out reboot for now to test if it is still needed in kamikaze
	#else
		#require_reboot
	fi

fi
exit 0
